AWSTemplateFormatVersion: 2010-09-09
Description: First time deploying with CloudFormation

Parameters:
  LambdaDefaultRole:
    Description: Basic execution role
    Type: String

  IntervalInMinutes:
    Description: Interval to execute lambda
    Type: Number
    
  BucketName:
    Description: Name of the bucket to save the data
    Type: String

Resources:
  # ParentLambdaFunction:
  #   Type: AWS::Lambda::Function
  #   Properties:
  #     Description: An attempt to chain 2 lambda calls (PARENT)
  #     FunctionName: ParentFunction
  #     Handler: index.handler
  #     MemorySize: 128
  #     Role: !Ref LambdaDefaultRole
  #     Runtime: python3.9
  #     Timeout: 5
  #     Environment:
  #       Variables:
  #         CHILD_LAMBDA_ARN: !GetAtt ChildLambdaFunction.Arn
  #     Code: ./out/parent_function.zip

  ChildLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: An attempt to chain 2 lambda calls (CHILD)
      FunctionName: ChildFunction
      Handler: index.handler
      MemorySize: 128
      Role: !Ref LambdaDefaultRole
      Runtime: python3.9
      Timeout: 5
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketName
      Code: ./out/child_function.zip
  
  TriggerFunctionEveryNMinutesRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub
        - Triggers the parent function every ${Interval} minutes
        - Interval: !Ref IntervalInMinutes
      EventBusName: default
      # EventPattern: Json
      Name: everyNminutes
      ScheduleExpression: !Sub
        - "rate(${Interval} minutes)"
        - Interval: !Ref IntervalInMinutes
      State: ENABLED
      Targets: 
        - 
          Arn: !GetAtt ChildLambdaFunction.Arn
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref ChildLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt TriggerFunctionEveryNMinutesRule.Arn

  StockInfoBucket:
      Type: AWS::S3::Bucket
      Properties: 
        AccessControl: Private
        BucketName: !Ref BucketName
