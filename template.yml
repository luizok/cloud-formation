AWSTemplateFormatVersion: 2010-09-09
Description: First time deploying with CloudFormation

Parameters:
  LambdaDefaultRole:
    Description: Basic execution role
    Type: String

Resources:
  ParentLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: An attempt to chain 2 lambda calls (PARENT)
      FunctionName: ParentFunction
      Handler: index.handler
      MemorySize: 128
      Role: !Ref LambdaDefaultRole
      Runtime: python3.9
      Timeout: 5
      Environment:
        Variables:
          CHILD_LAMBDA_ARN: !GetAtt ChildLambdaFunction.Arn
      Code:
        ZipFile: |
          import os
          import json
          import boto3

          def handler(event, context):
            print('Parent:', event)

            lambda_client = boto3.client('lambda')
            lambda_client.invoke(
              FunctionName=os.environ.get('CHILD_LAMBDA_ARN'),
              InvocationType='Event',
              Payload=json.dumps({'name': 'Luiz'})
            )

            return {
                'httpStatus': 200,
                'body': {'some': 'data'}
            }

  ChildLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: An attempt to chain 2 lambda calls (CHILD)
      FunctionName: ChildFunction
      Handler: index.handler
      MemorySize: 128
      Role: !Ref LambdaDefaultRole
      Runtime: python3.9
      Timeout: 5
      Code:
        ZipFile: |
          import json
          def handler(event, context):
            print('Child:', event)
            print('event type:', type(event))
            print(f'My name is {event["name"]}')

            return {
                'httpStatus': 200,
                'body': {'some': 'data'}
            }
